// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/elct9620/gopherday2024/internal/app"
	"github.com/elct9620/gopherday2024/internal/app/rest"
	"github.com/elct9620/gopherday2024/internal/app/rest/v1"
	"github.com/elct9620/gopherday2024/internal/app/rest/v2"
	"github.com/elct9620/gopherday2024/internal/app/rest/v3"
	"github.com/elct9620/gopherday2024/internal/config"
	"github.com/elct9620/gopherday2024/internal/repository"
	"github.com/elct9620/gopherday2024/internal/usecase"
)

// Injectors from wire.go:

func Initialize() (*app.RestServer, func(), error) {
	db, cleanup, err := app.ProvideBoltDB()
	if err != nil {
		return nil, nil, err
	}
	boltEventRepository := repository.NewBoltEventRepository(db)
	eventQuery := usecase.NewEventQuery(boltEventRepository)
	createEventCommand := usecase.NewCreateEventCommand(boltEventRepository)
	v := v1.ProvideRotues(eventQuery, createEventCommand)
	router := v1.New(v...)
	v4 := v2.ProvideRotues(eventQuery)
	v2Router := v2.New(v4...)
	inMemoryShipmentRepository := repository.NewInMemoryShipmentRepository()
	shipmentQuery := usecase.NewShipmentQuery(inMemoryShipmentRepository)
	v5 := v3.ProvideRotues(shipmentQuery)
	v3Router := v3.New(v5...)
	v6 := app.ProvideRestRouters(router, v2Router, v3Router)
	t, err := rest.NewOpenApi()
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	routersRouter, err := rest.NewOpenApiRouter(t)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	openApiMiddleware := rest.ProvideOpenApiMiddleware(routersRouter)
	mux := rest.New(v6, openApiMiddleware)
	viper, err := config.ProvideViper()
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	configConfig := config.ProvideDefaultConfig(viper)
	restServerConfig := app.NewRestServerConfig(configConfig)
	restServer := app.NewRestServer(mux, restServerConfig)
	return restServer, func() {
		cleanup()
	}, nil
}
