// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/elct9620/gopherday2024/internal/app"
	"github.com/elct9620/gopherday2024/internal/app/grpc"
	"github.com/elct9620/gopherday2024/internal/config"
	"github.com/elct9620/gopherday2024/internal/repository"
	"github.com/elct9620/gopherday2024/internal/usecase"
)

// Injectors from wire.go:

func Initialize() (*app.GrpcServer, func(), error) {
	db, cleanup, err := app.ProvideBoltDB()
	if err != nil {
		return nil, nil, err
	}
	boltEventRepository := repository.NewBoltEventRepository(db)
	eventQuery := usecase.NewEventQuery(boltEventRepository)
	eventsServer := grpc.NewEventsServer(eventQuery)
	server := app.ProvideGrpcServer(eventsServer)
	viper, err := config.ProvideViper()
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	configConfig := config.ProvideDefaultConfig(viper)
	grpcServerConfig := app.NewGrpcServerConfig(configConfig)
	grpcServer := app.NewGrpcServer(server, grpcServerConfig)
	return grpcServer, func() {
		cleanup()
	}, nil
}
